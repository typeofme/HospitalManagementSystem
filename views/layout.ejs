<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= title %> - MediCare+ Hospital Management</title>
    
    <!-- Modern CSS Framework -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    
    <style>
        :root {
            --primary-gradient: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            --secondary-gradient: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
            --success-gradient: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
            --warning-gradient: linear-gradient(135deg, #fa709a 0%, #fee140 100%);
            --danger-gradient: linear-gradient(135deg, #ff6b6b 0%, #ee5a24 100%);
            --dark-gradient: linear-gradient(135deg, #2c3e50 0%, #3498db 100%);
            --sidebar-bg: linear-gradient(180deg, #2c3e50 0%, #34495e 100%);
            --card-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            --card-shadow-hover: 0 16px 64px rgba(0, 0, 0, 0.15);
            --border-radius: 16px;
            --sidebar-width: 280px;
            --header-height: 70px;
            --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
            min-height: 100vh;
            font-size: 14px;
            line-height: 1.6;
            color: #2c3e50;
        }

        /* Sidebar Styles */
        .sidebar {
            position: fixed;
            top: 0;
            left: 0;
            height: 100vh;
            width: var(--sidebar-width);
            background: var(--sidebar-bg);
            backdrop-filter: blur(20px);
            z-index: 1000;
            transition: var(--transition);
            border-right: 1px solid rgba(255, 255, 255, 0.1);
            display: flex;
            flex-direction: column;
            overflow: hidden;
        }

        .sidebar-header {
            padding: 2rem 1.5rem;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
            background: rgba(255, 255, 255, 0.05);
        }

        .sidebar-brand {
            display: flex;
            align-items: center;
            text-decoration: none;
            color: white;
            font-size: 1.5rem;
            font-weight: 700;
            letter-spacing: -0.02em;
        }

        .sidebar-brand:hover {
            color: white;
            text-decoration: none;
        }

        .sidebar-brand i {
            width: 40px;
            height: 40px;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 12px;
            font-size: 18px;
        }

        .sidebar-nav {
            padding: 1rem 0;
            flex: 1;
            overflow-y: auto;
            padding-bottom: 120px; /* Space for footer */
        }

        .sidebar-nav::-webkit-scrollbar {
            width: 4px;
        }

        .sidebar-nav::-webkit-scrollbar-track {
            background: rgba(255, 255, 255, 0.1);
        }

        .sidebar-nav::-webkit-scrollbar-thumb {
            background: rgba(255, 255, 255, 0.3);
            border-radius: 4px;
        }

        .nav-section {
            margin-bottom: 2rem;
        }

        .nav-section-title {
            color: rgba(255, 255, 255, 0.7);
            font-size: 11px;
            font-weight: 600;
            text-transform: uppercase;
            letter-spacing: 0.5px;
            padding: 0 1.5rem 0.5rem;
            margin-bottom: 0.5rem;
        }

        .nav-item {
            margin-bottom: 4px;
        }

        .nav-link {
            display: flex;
            align-items: center;
            padding: 12px 1.5rem;
            color: rgba(255, 255, 255, 0.8);
            text-decoration: none;
            transition: var(--transition);
            border-radius: 0;
            font-weight: 500;
            position: relative;
        }

        .nav-link:hover {
            background: rgba(255, 255, 255, 0.1);
            color: white;
            transform: translateX(4px);
        }

        .nav-link.active {
            background: rgba(255, 255, 255, 0.15);
            color: white;
            font-weight: 600;
        }

        .nav-link.active::before {
            content: '';
            position: absolute;
            left: 0;
            top: 0;
            bottom: 0;
            width: 4px;
            background: var(--success-gradient);
            border-radius: 0 4px 4px 0;
        }

        .nav-link i {
            width: 20px;
            margin-right: 12px;
            font-size: 16px;
        }

        /* Main Content Styles */
        .main-wrapper {
            margin-left: var(--sidebar-width);
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }

        .main-header {
            position: fixed !important;
            top: 0;
            left: var(--sidebar-width);
            right: 0;
            height: var(--header-height);
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            border-bottom: 1px solid rgba(0, 0, 0, 0.05);
            padding: 0 2rem;
            display: flex;
            align-items: center;
            justify-content: space-between;
            z-index: 900;
            box-shadow: 0 2px 20px rgba(0, 0, 0, 0.08);
        }

        .header-left {
            flex: 1;
        }

        .header-title {
            font-size: 1.5rem;
            font-weight: 600;
            color: #2c3e50;
            margin: 0;
            letter-spacing: -0.02em;
        }

        .header-subtitle {
            font-size: 0.875rem;
            color: #7f8c8d;
            margin: 0;
        }

        .header-right {
            display: flex;
            align-items: center;
            gap: 1rem;
        }

        .header-time {
            display: flex;
            align-items: center;
            background: linear-gradient(135deg, rgba(102, 126, 234, 0.1), rgba(118, 75, 162, 0.1));
            padding: 12px 16px;
            border-radius: 12px;
            color: #667eea;
            font-size: 14px;
            font-weight: 600;
            border: 1px solid rgba(102, 126, 234, 0.2);
            backdrop-filter: blur(10px);
            transition: var(--transition);
            box-shadow: 0 2px 8px rgba(102, 126, 234, 0.1);
        }

        .header-time:hover {
            background: linear-gradient(135deg, rgba(102, 126, 234, 0.15), rgba(118, 75, 162, 0.15));
            border-color: rgba(102, 126, 234, 0.3);
            transform: translateY(-1px);
            box-shadow: 0 4px 12px rgba(102, 126, 234, 0.2);
        }

        .header-time i {
            margin-right: 8px;
            font-size: 16px;
            animation: clockTick 2s infinite ease-in-out;
        }

        @keyframes clockTick {
            0%, 100% { transform: rotate(0deg); }
            50% { transform: rotate(6deg); }
        }

        .header-time .time-display {
            font-family: 'Courier New', monospace;
            letter-spacing: 0.5px;
        }

        .main-content {
            margin-top: var(--header-height);
            flex: 1;
            padding: 2rem;
            background: transparent;
        }

        /* Enhanced Form Controls */
        .form-control, .form-select {
            border: 2px solid #e9ecef;
            border-radius: 12px;
            padding: 12px 16px;
            transition: var(--transition);
            background: white !important;
            backdrop-filter: none;
            color: #2c3e50;
        }

        .form-control:focus, .form-select:focus {
            border-color: #667eea;
            box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.15);
            background: white !important;
            transform: translateY(-1px);
        }

        .form-control:hover, .form-select:hover {
            border-color: #b8c5ea;
            transform: translateY(-1px);
        }

        .form-control::placeholder {
            color: #6c757d;
        }

        /* Enhanced Button Ripple Effect */
        .btn {
            position: relative;
            overflow: hidden;
            z-index: 1;
            transform: perspective(1px) translateZ(0);
        }

        .btn:before {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 0;
            height: 0;
            background: rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            transform: translate(-50%, -50%);
            transition: width 0.6s, height 0.6s;
            z-index: -1;
        }

        .btn:active:before {
            width: 300px;
            height: 300px;
        }

        /* Enhanced Button Styles */
        .btn-primary {
            background: var(--primary-gradient);
            border: none;
            color: white;
            font-weight: 600;
            padding: 12px 24px;
            border-radius: 10px;
            transition: var(--transition);
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(102, 126, 234, 0.4);
            color: white;
        }

        .btn-secondary {
            background: #f8f9fa;
            border: 2px solid #e9ecef;
            color: #6c757d;
            font-weight: 600;
            padding: 12px 24px;
            border-radius: 10px;
            transition: var(--transition);
        }

        .btn-secondary:hover {
            background: #e9ecef;
            border-color: #dee2e6;
            color: #495057;
            transform: translateY(-1px);
        }

        .btn-outline-primary, .btn-outline-warning {
            border-width: 2px;
            font-weight: 500;
            border-radius: 8px;
            padding: 6px 12px;
            transition: var(--transition);
        }

        .btn-outline-primary:hover, .btn-outline-warning:hover {
            transform: translateY(-1px);
        }

        /* Floating Action Button */
        .fab {
            position: fixed;
            bottom: 30px;
            right: 30px;
            width: 60px;
            height: 60px;
            border-radius: 50%;
            background: var(--primary-gradient);
            border: none;
            color: white;
            font-size: 24px;
            box-shadow: 0 8px 32px rgba(102, 126, 234, 0.4);
            transition: var(--transition);
            z-index: 1000;
        }

        .fab:hover {
            transform: translateY(-4px) scale(1.05);
            box-shadow: 0 12px 48px rgba(102, 126, 234, 0.6);
        }

        /* Enhanced Data Tables */
        .table-container {
            background: rgba(255, 255, 255, 0.95);
            border-radius: var(--border-radius);
            box-shadow: var(--card-shadow);
            backdrop-filter: blur(20px);
            overflow: hidden;
            transition: var(--transition);
        }

        .table-container:hover {
            box-shadow: var(--card-shadow-hover);
        }

        .table thead th {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
            border: none;
            font-weight: 600;
            color: #495057;
            padding: 16px;
            position: relative;
        }

        .table thead th:after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 0;
            right: 0;
            height: 2px;
            background: var(--primary-gradient);
        }

        .table tbody td {
            padding: 16px;
            vertical-align: middle;
            border-color: rgba(0, 0, 0, 0.05);
        }

        /* Override any conflicting styles */
        .modal {
            z-index: 10050 !important;
            display: none !important;
        }

        .modal.show {
            display: block !important;
        }

        .modal.fade.show {
            opacity: 1 !important;
        }

        .modal-backdrop {
            z-index: 10040 !important;
            background-color: rgba(0, 0, 0, 0.5) !important;
        }

        .modal.show {
            display: block !important;
        }

        .modal-content {
            border: none;
            border-radius: var(--border-radius);
            background: white !important;
            box-shadow: 0 32px 64px rgba(0, 0, 0, 0.15);
            backdrop-filter: none;
            position: relative;
            z-index: 1;
        }

        .modal-header {
            border-bottom: 1px solid #e9ecef;
            padding: 24px;
            background: #f8f9fa;
            border-radius: var(--border-radius) var(--border-radius) 0 0;
        }

        .modal-title {
            color: #2c3e50;
            font-weight: 600;
        }

        .modal-body {
            padding: 24px;
            background: white;
        }

        .modal-footer {
            border-top: 1px solid #e9ecef;
            padding: 24px;
            background: #f8f9fa;
            border-radius: 0 0 var(--border-radius) var(--border-radius);
        }

        .btn-close {
            background: none;
            border: none;
            color: #6c757d;
            font-size: 1.2rem;
            padding: 8px;
            border-radius: 50%;
            transition: var(--transition);
        }

        .btn-close:hover {
            background: rgba(0, 0, 0, 0.1);
            transform: scale(1.1);
        }

        /* Form Labels */
        .form-label {
            color: #495057;
            font-weight: 500;
            margin-bottom: 8px;
        }

        /* Modal Form Inputs - Ensure Black Text */
        .modal .form-control,
        .modal .form-select,
        .modal textarea.form-control {
            background: white !important;
            color: #2c3e50 !important;
            border: 2px solid #e9ecef;
            border-radius: 8px;
        }

        .modal .form-control:focus,
        .modal .form-select:focus,
        .modal textarea.form-control:focus {
            background: white !important;
            color: #2c3e50 !important;
            border-color: #667eea;
            box-shadow: 0 0 0 0.2rem rgba(102, 126, 234, 0.15);
        }

        .modal .form-control::placeholder {
            color: #6c757d !important;
        }

        /* Enhanced Search Box */
        .search-box {
            position: relative;
            margin-bottom: 20px;
        }

        .search-box input {
            padding-left: 48px;
            border-radius: 25px;
            border: 2px solid transparent;
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            transition: var(--transition);
        }

        .search-box input:focus {
            border-color: #667eea;
            background: white;
            transform: scale(1.02);
        }

        .search-box .search-icon {
            position: absolute;
            left: 16px;
            top: 50%;
            transform: translateY(-50%);
            color: #6c757d;
            transition: var(--transition);
        }

        .search-box input:focus + .search-icon {
            color: #667eea;
        }

        /* Progress Bars */
        .progress {
            height: 8px;
            border-radius: 50px;
            background: rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }

        .progress-bar {
            background: var(--primary-gradient);
            transition: width 0.8s ease;
            position: relative;
            overflow: hidden;
        }

        .progress-bar:before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: linear-gradient(90deg, transparent, rgba(255,255,255,0.4), transparent);
            animation: progressShine 2s infinite;
        }

        @keyframes progressShine {
            0% { left: -100%; }
            100% { left: 100%; }
        }

        /* Status Badges */
        .badge {
            padding: 6px 12px;
            border-radius: 20px;
            font-weight: 500;
            font-size: 0.75rem;
            border: 2px solid transparent;
            transition: var(--transition);
        }

        .badge:hover {
            transform: scale(1.05);
        }

        .badge-success {
            background: linear-gradient(135deg, #51cf66 0%, #40c057 100%);
            color: white;
        }

        .badge-danger {
            background: linear-gradient(135deg, #ff6b6b 0%, #fa5252 100%);
            color: white;
        }

        .badge-warning {
            background: linear-gradient(135deg, #ffd43b 0%, #fab005 100%);
            color: #495057;
        }

        .badge-info {
            background: linear-gradient(135deg, #74c0fc 0%, #339af0 100%);
            color: white;
        }

        /* Loading States */
        .btn.loading {
            position: relative;
            color: transparent !important;
        }

        .btn.loading:after {
            content: '';
            position: absolute;
            width: 16px;
            height: 16px;
            top: 50%;
            left: 50%;
            margin-left: -8px;
            margin-top: -8px;
            border: 2px solid transparent;
            border-top-color: currentColor;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }

        @keyframes spin {
            0% { transform: rotate(0deg); }
            100% { transform: rotate(360deg); }
        }

        /* Page Transitions */
        .main-content {
            animation: fadeInUp 0.6s ease-out;
        }

        @keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(30px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Responsive Enhancements */
        @media (max-width: 992px) {
            .mobile-toggle {
                display: block !important;
            }
            
            .main-header {
                left: 0 !important;
                padding: 0 1rem;
            }
            
            .main-content {
                margin-top: var(--header-height);
            }
            
            .header-time {
                padding: 8px 12px;
                font-size: 12px;
            }
            
            .header-time i {
                font-size: 14px;
            }
            
            .sidebar-user-name {
                font-size: 13px;
            }
            
            .sidebar-user-role {
                font-size: 11px;
            }
        }

        @media (max-width: 768px) {
            .header-time .time-display {
                display: none;
            }
            
            .header-time::after {
                content: attr(data-time);
                font-size: 12px;
            }
            
            .header-title {
                font-size: 1.2rem;
            }
        }

        /* Dark Mode Support */
        @media (prefers-color-scheme: dark) {
            .form-control, .form-select {
                background: rgba(33, 37, 41, 0.9);
                border-color: #495057;
                color: #e9ecef;
            }
            
            .table-container {
                background: rgba(33, 37, 41, 0.95);
            }
            
            .table thead th {
                background: linear-gradient(135deg, #495057 0%, #6c757d 100%);
                color: #e9ecef;
            }
        }

        /* Sidebar Footer */
        .sidebar-footer {
            position: relative;
            padding: 1.5rem;
            border-top: 1px solid rgba(255, 255, 255, 0.1);
            background: rgba(0, 0, 0, 0.2);
            backdrop-filter: blur(10px);
            margin-top: auto;
        }

        .sidebar-user {
            display: flex;
            align-items: center;
            color: rgba(255, 255, 255, 0.95);
            gap: 12px;
            animation: slideInLeft 0.6s ease-out;
        }

        @keyframes slideInLeft {
            from {
                opacity: 0;
                transform: translateX(-20px);
            }
            to {
                opacity: 1;
                transform: translateX(0);
            }
        }

        .header-time {
            animation: slideInRight 0.6s ease-out;
        }

        @keyframes slideInRight {
            from {
                opacity: 0;
                transform: translateX(20px);
            }
            to {
                opacity: 1;
                transform: translateX(0);
            }
        }

        .logout-btn {
            width: 36px;
            height: 36px;
            border-radius: 8px;
            background: rgba(255, 255, 255, 0.1);
            border: 1px solid rgba(255, 255, 255, 0.2);
            color: rgba(255, 255, 255, 0.8);
            display: flex;
            align-items: center;
            justify-content: center;
            cursor: pointer;
            transition: var(--transition);
            font-size: 14px;
        }

        .logout-btn:hover {
            background: rgba(255, 87, 87, 0.2);
            border-color: rgba(255, 87, 87, 0.4);
            color: #ff5757;
            transform: scale(1.05);
        }

        .logout-btn:active {
            transform: scale(0.98);
        }

        /* Mobile Toggle Button */
        .mobile-toggle {
            display: none;
            background: rgba(255, 255, 255, 0.9);
            border: 1px solid #e9ecef;
            color: #2c3e50;
            font-size: 1.2rem;
            padding: 8px 12px;
            border-radius: 8px;
            transition: var(--transition);
            backdrop-filter: blur(10px);
        }

        .mobile-toggle:hover {
            background: white;
            border-color: #667eea;
            color: #667eea;
            transform: scale(1.05);
        }

        /* Custom Confirm Dialog */
        .confirm-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.6);
            backdrop-filter: blur(5px);
            z-index: 15000;
            display: flex;
            align-items: center;
            justify-content: center;
            opacity: 0;
            visibility: hidden;
            transition: all 0.3s ease;
        }

        .confirm-overlay.show {
            opacity: 1;
            visibility: visible;
        }

        .confirm-dialog {
            background: white;
            border-radius: var(--border-radius);
            box-shadow: 0 30px 80px rgba(0, 0, 0, 0.3);
            max-width: 450px;
            width: 90%;
            transform: scale(0.7) translateY(-20px);
            transition: all 0.3s cubic-bezier(0.25, 0.46, 0.45, 0.94);
            overflow: hidden;
        }

        .confirm-overlay.show .confirm-dialog {
            transform: scale(1) translateY(0);
        }

        .confirm-header {
            padding: 24px 24px 0;
            text-align: center;
        }

        .confirm-icon {
            width: 64px;
            height: 64px;
            border-radius: 50%;
            margin: 0 auto 16px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 28px;
            color: white;
            background: var(--warning-gradient);
        }

        .confirm-title {
            font-size: 20px;
            font-weight: 600;
            margin-bottom: 8px;
            color: #2c3e50;
        }

        .confirm-message {
            color: #7f8c8d;
            font-size: 14px;
            line-height: 1.6;
            margin-bottom: 0;
        }

        .confirm-actions {
            padding: 24px;
            display: flex;
            gap: 12px;
            justify-content: center;
        }

        .confirm-btn {
            padding: 12px 24px;
            border: none;
            border-radius: 10px;
            font-weight: 600;
            font-size: 14px;
            cursor: pointer;
            transition: var(--transition);
            min-width: 100px;
        }

        .confirm-btn.primary {
            background: var(--danger-gradient);
            color: white;
        }

        .confirm-btn.primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 25px rgba(255, 107, 107, 0.4);
        }

        .confirm-btn.secondary {
            background: #ecf0f1;
            color: #2c3e50;
        }

        .confirm-btn.secondary:hover {
            background: #d5dbdb;
            transform: translateY(-1px);
        }

    </style>
</head>
<body>
    <!-- Notification Container -->
    <div class="notification-container" id="notificationContainer"></div>
    
    <!-- Custom Confirm Dialog -->
    <div class="confirm-overlay" id="confirmOverlay">
        <div class="confirm-dialog">
            <div class="confirm-header">
                <div class="confirm-icon">
                    <i class="fas fa-exclamation-triangle"></i>
                </div>
                <h4 class="confirm-title" id="confirmTitle">Confirm Action</h4>
                <p class="confirm-message" id="confirmMessage">Are you sure you want to proceed?</p>
            </div>
            <div class="confirm-actions">
                <button class="confirm-btn secondary" id="confirmCancel">Cancel</button>
                <button class="confirm-btn primary" id="confirmOk">Confirm</button>
            </div>
        </div>
    </div>

    <!-- Sidebar -->
    <div class="sidebar" id="sidebar">
        <div class="sidebar-header">
            <a href="/dashboard" class="sidebar-brand">
                <i class="fas fa-hospital-alt"></i>
                MediCare+
            </a>
        </div>

        <nav class="sidebar-nav">
            <div class="nav-section">
                <div class="nav-section-title">Main</div>
                <div class="nav-item">
                    <a class="nav-link" href="/dashboard">
                        <i class="fas fa-chart-pie"></i>
                        <span>Dashboard</span>
                    </a>
                </div>
            </div>

            <div class="nav-section">
                <div class="nav-section-title">Patient Management</div>
                <div class="nav-item">
                    <a class="nav-link" href="/patients">
                        <i class="fas fa-user-injured"></i>
                        <span>Patients</span>
                    </a>
                </div>
                <div class="nav-item">
                    <a class="nav-link" href="/appointments">
                        <i class="fas fa-calendar-check"></i>
                        <span>Appointments</span>
                    </a>
                </div>
                <div class="nav-item">
                    <a class="nav-link" href="/medical-records">
                        <i class="fas fa-file-medical"></i>
                        <span>Medical Records</span>
                    </a>
                </div>
            </div>

            <% if (user && ['admin', 'staff'].includes(user.role)) { %>
            <div class="nav-section">
                <div class="nav-section-title">Staff Management</div>
                <div class="nav-item">
                    <a class="nav-link" href="/doctors">
                        <i class="fas fa-user-md"></i>
                        <span>Doctors</span>
                    </a>
                </div>
                <div class="nav-item">
                    <a class="nav-link" href="/departments">
                        <i class="fas fa-building"></i>
                        <span>Departments</span>
                    </a>
                </div>
            </div>
            <% } %>

            <div class="nav-section">
                <div class="nav-section-title">Resources</div>
                <div class="nav-item">
                    <a class="nav-link" href="/treatments">
                        <i class="fas fa-pills"></i>
                        <span>Treatments</span>
                    </a>
                </div>
                <div class="nav-item">
                    <a class="nav-link" href="/database-features">
                        <i class="fas fa-database"></i>
                        <span>Database Features</span>
                    </a>
                </div>
            </div>

            <% if (user && user.role === 'admin') { %>
            <div class="nav-section">
                <div class="nav-section-title">Administration</div>
                <div class="nav-item">
                    <a class="nav-link" href="/users">
                        <i class="fas fa-users-cog"></i>
                        <span>User Management</span>
                    </a>
                </div>
            </div>
            <% } %>
        </nav>

        <div class="sidebar-footer">
            <div class="sidebar-user">
                <div class="sidebar-user-avatar">
                    <%= user ? (user.first_name.charAt(0) + user.last_name.charAt(0)).toUpperCase() : 'U' %>
                </div>
                <div class="sidebar-user-info">
                    <p class="sidebar-user-name"><%= user ? user.first_name + ' ' + user.last_name : 'User' %></p>
                    <p class="sidebar-user-role"><%= user ? user.role : 'Guest' %></p>
                </div>
                <button class="logout-btn" id="logoutBtn" title="Logout">
                    <i class="fas fa-sign-out-alt"></i>
                </button>
            </div>
        </div>
    </div>

    <!-- Main Content -->
    <div class="main-wrapper">
        <header class="main-header">
            <button class="mobile-toggle d-lg-none" id="mobileToggle">
                <i class="fas fa-bars"></i>
            </button>
            
            <div class="header-left">
                <h1 class="header-title"><%= title %></h1>
                <% if (typeof subtitle !== 'undefined') { %>
                    <p class="header-subtitle"><%= subtitle %></p>
                <% } %>
            </div>

            <div class="header-right">
                <div class="header-time">
                    <i class="fas fa-clock"></i>
                    <span class="time-display" id="current-time">Loading...</span>
                </div>
            </div>
        </header>

        <main class="main-content">
            <%- body %>
        </main>
    </div>

    <!-- Scripts -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js"></script>
    
    <script>
        // Update current time with modern formatting
        function updateTime() {
            const now = new Date();
            const options = {
                hour: '2-digit',
                minute: '2-digit',
                second: '2-digit',
                hour12: true,
                timeZoneName: 'short'
            };
            const timeString = now.toLocaleTimeString('en-US', options);
            const dateString = now.toLocaleDateString('en-US', {
                weekday: 'short',
                month: 'short',
                day: 'numeric'
            });
            
            const timeElement = document.getElementById('current-time');
            if (timeElement) {
                timeElement.innerHTML = `${dateString} • ${timeString}`;
            }
        }

        // Update time immediately and then every second
        updateTime();
        setInterval(updateTime, 1000);

        // Set active navigation link
        function setActiveNavLink() {
            const currentPath = window.location.pathname;
            const navLinks = document.querySelectorAll('.nav-link');
            
            navLinks.forEach(link => {
                link.classList.remove('active');
                const href = link.getAttribute('href');
                if (href === currentPath || (currentPath.startsWith(href) && href !== '/' && href !== '/dashboard')) {
                    link.classList.add('active');
                }
            });
        }

        // Toggle sidebar on mobile
        function toggleSidebar() {
            const sidebar = document.getElementById('sidebar');
            sidebar.classList.toggle('show');
        }

        // Modern Notification System
        class NotificationManager {
            constructor() {
                this.container = document.getElementById('notificationContainer');
                this.notifications = new Map();
                this.idCounter = 0;
            }

            show(message, type = 'info', title = '', duration = 5000) {
                const id = ++this.idCounter;
                const notification = this.createElement(id, message, type, title);
                
                this.container.appendChild(notification);
                this.notifications.set(id, notification);

                // Trigger animation
                requestAnimationFrame(() => {
                    notification.classList.add('show');
                });

                // Auto remove
                if (duration > 0) {
                    this.startProgressBar(notification, duration);
                    setTimeout(() => this.remove(id), duration);
                }

                return id;
            }

            createElement(id, message, type, title) {
                const notification = document.createElement('div');
                notification.className = `notification ${type}`;
                notification.dataset.id = id;

                const icons = {
                    success: 'fas fa-check',
                    error: 'fas fa-times',
                    warning: 'fas fa-exclamation',
                    info: 'fas fa-info'
                };

                const titles = {
                    success: title || 'Success',
                    error: title || 'Error',
                    warning: title || 'Warning',
                    info: title || 'Information'
                };

                notification.innerHTML = `
                    <div class="notification-header">
                        <div class="notification-icon">
                            <i class="${icons[type]}"></i>
                        </div>
                        <h6 class="notification-title">${titles[type]}</h6>
                        <button class="notification-close" data-notification-id="${id}">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                    <p class="notification-message">${message}</p>
                    <div class="notification-progress"></div>
                `;

                return notification;
            }

            startProgressBar(notification, duration) {
                const progressBar = notification.querySelector('.notification-progress');
                if (!progressBar) return;

                progressBar.style.width = '100%';
                
                // Animate the progress bar
                requestAnimationFrame(() => {
                    progressBar.style.transition = `width ${duration}ms linear`;
                    progressBar.style.width = '0%';
                });
            }

            remove(id) {
                const notification = this.notifications.get(id);
                if (!notification) return;

                notification.classList.remove('show');
                
                setTimeout(() => {
                    if (notification.parentNode) {
                        notification.parentNode.removeChild(notification);
                    }
                    this.notifications.delete(id);
                }, 300);
            }

            success(message, title = '', duration = 4000) {
                return this.show(message, 'success', title, duration);
            }

            error(message, title = '', duration = 6000) {
                return this.show(message, 'error', title, duration);
            }

            warning(message, title = '', duration = 5000) {
                return this.show(message, 'warning', title, duration);
            }

            info(message, title = '', duration = 4000) {
                return this.show(message, 'info', title, duration);
            }
        }

        // Custom Confirm Dialog
        class ConfirmDialog {
            constructor() {
                this.overlay = document.getElementById('confirmOverlay');
                this.titleElement = document.getElementById('confirmTitle');
                this.messageElement = document.getElementById('confirmMessage');
                this.cancelBtn = document.getElementById('confirmCancel');
                this.okBtn = document.getElementById('confirmOk');
                this.currentResolve = null;

                this.setupEventListeners();
            }

            setupEventListeners() {
                this.cancelBtn.addEventListener('click', () => this.close(false));
                this.okBtn.addEventListener('click', () => this.close(true));
                
                this.overlay.addEventListener('click', (e) => {
                    if (e.target === this.overlay) {
                        this.close(false);
                    }
                });

                document.addEventListener('keydown', (e) => {
                    if (e.key === 'Escape' && this.overlay.classList.contains('show')) {
                        this.close(false);
                    }
                });
            }

            show(options = {}) {
                return new Promise((resolve) => {
                    this.currentResolve = resolve;
                    
                    this.titleElement.textContent = options.title || 'Confirm Action';
                    this.messageElement.textContent = options.message || 'Are you sure you want to proceed?';
                    this.okBtn.textContent = options.confirmText || 'Confirm';
                    this.cancelBtn.textContent = options.cancelText || 'Cancel';

                    // Set button styles based on type
                    this.okBtn.className = `confirm-btn ${options.type === 'danger' ? 'primary' : 'primary'}`;

                    document.body.style.overflow = 'hidden';
                    this.overlay.classList.add('show');
                });
            }

            close(result) {
                this.overlay.classList.remove('show');
                document.body.style.overflow = '';
                
                if (this.currentResolve) {
                    this.currentResolve(result);
                    this.currentResolve = null;
                }
            }
        }

        // Debug function to test modals
        window.testModal = function() {
            console.log('Testing modal functionality...');
            console.log('Bootstrap:', typeof bootstrap);
            console.log('Modal class:', bootstrap?.Modal);
            
            // Test if a modal exists
            const modal = document.querySelector('.modal');
            console.log('Modal found:', modal);
            
            if (modal && bootstrap?.Modal) {
                try {
                    const bsModal = new bootstrap.Modal(modal);
                    bsModal.show();
                    console.log('Modal show attempted');
                } catch (e) {
                    console.error('Modal error:', e);
                }
            }
        };

        // Global functions for easy access
        window.showNotification = (message, type, title, duration) => {
            if (window.notificationManager) {
                return window.notificationManager.show(message, type, title, duration);
            } else {
                console.error('Notification manager not initialized');
                return false;
            }
        };

        window.showSuccess = (message, title, duration) => {
            if (window.notificationManager) {
                return window.notificationManager.success(message, title, duration);
            } else {
                console.error('Notification manager not initialized');
                return false;
            }
        };

        window.showError = (message, title, duration) => {
            if (window.notificationManager) {
                return window.notificationManager.error(message, title, duration);
            } else {
                console.error('Notification manager not initialized');
                return false;
            }
        };

        window.showWarning = (message, title, duration) => {
            if (window.notificationManager) {
                return window.notificationManager.warning(message, title, duration);
            } else {
                console.error('Notification manager not initialized');
                return false;
            }
        };

        window.showInfo = (message, title, duration) => {
            if (window.notificationManager) {
                return window.notificationManager.info(message, title, duration);
            } else {
                console.error('Notification manager not initialized');
                return false;
            }
        };

        window.confirmAction = (options) => {
            if (window.confirmDialog) {
                return window.confirmDialog.show(options);
            } else {
                console.error('Confirm dialog not initialized');
                return Promise.resolve(false);
            }
        };

        // Logout function
        async function logout() {
            const confirmed = await confirmAction({
                title: 'Confirm Logout',
                message: 'Are you sure you want to logout?',
                confirmText: 'Logout',
                cancelText: 'Cancel',
                type: 'danger'
            });
            
            if (confirmed) {
                window.location.href = '/logout';
            }
        }

        // Close sidebar when clicking outside on mobile and handle notification close buttons
        document.addEventListener('click', function(e) {
            const sidebar = document.getElementById('sidebar');
            const toggle = document.querySelector('.mobile-toggle');
            
            // Handle notification close buttons
            if (e.target.closest('.notification-close')) {
                const button = e.target.closest('.notification-close');
                const notificationId = button.getAttribute('data-notification-id');
                if (notificationId && window.notificationManager) {
                    window.notificationManager.remove(parseInt(notificationId));
                }
                return;
            }
            
            // Handle sidebar close on mobile
            if (window.innerWidth <= 992) {
                if (!sidebar.contains(e.target) && !toggle.contains(e.target)) {
                    sidebar.classList.remove('show');
                }
            }
        });

        // Initialize
        document.addEventListener('DOMContentLoaded', function() {
            console.log('DOM loaded, initializing...');
            
            // Initialize notification and confirm systems
            try {
                window.notificationManager = new NotificationManager();
                window.confirmDialog = new ConfirmDialog();
                console.log('Notification and confirm systems initialized');
            } catch (e) {
                console.error('Error initializing notification systems:', e);
            }
            
            setActiveNavLink();
            
            // Add event listeners for buttons
            const logoutBtn = document.getElementById('logoutBtn');
            if (logoutBtn) {
                logoutBtn.addEventListener('click', logout);
            }
            
            const mobileToggle = document.getElementById('mobileToggle');
            if (mobileToggle) {
                mobileToggle.addEventListener('click', toggleSidebar);
            }

            // Test modals after a short delay
            setTimeout(() => {
                const modals = document.querySelectorAll('.modal');
                console.log('Found modals:', modals.length);
                modals.forEach((modal, index) => {
                    console.log(`Modal ${index}:`, modal.id, modal.classList.toString());
                });
            }, 1000);
        });

        // Handle responsive design
        window.addEventListener('resize', function() {
            const sidebar = document.getElementById('sidebar');
            if (window.innerWidth > 992) {
                sidebar.classList.remove('show');
            }
        });
    </script>
</body>
</html>
